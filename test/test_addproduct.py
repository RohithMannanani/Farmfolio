# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestAddproduct():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_addproduct(self):
    self.driver.get("http://localhost/Mini%20project/farm/farm.php")
    self.driver.set_window_size(1031, 802)
    self.driver.find_element(By.LINK_TEXT, "Products").click()
    self.driver.find_element(By.CSS_SELECTOR, ".add-product-btn").click()
    self.driver.find_element(By.ID, "productName").click()
    self.driver.find_element(By.ID, "productName").send_keys("kanni mango")
    self.driver.find_element(By.ID, "productCategory").click()
    dropdown = self.driver.find_element(By.ID, "productCategory")
    dropdown.find_element(By.XPATH, "//option[. = 'Mango']").click()
    self.driver.find_element(By.ID, "productDescription").click()
    self.driver.find_element(By.ID, "productDescription").send_keys("fresh mango")
    self.driver.find_element(By.ID, "productPrice").click()
    self.driver.find_element(By.ID, "productPrice").send_keys("45")
    self.driver.find_element(By.ID, "productStock").click()
    self.driver.find_element(By.ID, "productStock").send_keys("20")
    self.driver.find_element(By.ID, "productUnit").click()
    dropdown = self.driver.find_element(By.ID, "productUnit")
    dropdown.find_element(By.XPATH, "//option[. = 'Kilogram (kg)']").click()
    self.driver.find_element(By.ID, "submitBtn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".product-card:nth-child(1) .deactivate-btn").click()
    assert self.driver.switch_to.alert.text == "Are you sure you want to deactivate this product?"
    self.driver.switch_to.alert.accept()
    assert self.driver.switch_to.alert.text == "Product deactivated successfully."
    self.driver.find_element(By.CSS_SELECTOR, ".activate-btn").click()
    assert self.driver.switch_to.alert.text == "Are you sure you want to activate this product?"
    self.driver.switch_to.alert.accept()
    assert self.driver.switch_to.alert.text == "Product activated successfully."
  
